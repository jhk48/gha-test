name: Update CHANGELOG

on:
  pull_request:
    types:
      - labeled

env:
  COMMIT_USER_EMAIL: developer@triple-corp.com
  COMMIT_USER_NAME: triple-frontend[bot]
  CURRENT_VERSION: ${{ github.event.pull_request.milestone.title }}

jobs:
  update-changelog:
    runs-on: ubuntu-latest
    if: ${{ github.event.label.name == 'release' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Fetch PRs in current version's milestone
        run: |
          RESPONSE=$(curl -H "Accept: application/vnd.github+json" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/search/issues?q=milestone:${{ env.CURRENT_VERSION }}+type:pr+repo:$GITHUB_REPOSITORY")

          if [[ $(echo "$RESPONSE" | jq '.total_count') == null ]]; then
            echo $RESPONSE | jq '.message'
            exit 1
          fi

          PRS_IN_MILESTONE=$(echo "$RESPONSE" | jq '.items[] | select(.pull_request.merged_at != null and (.labels | map(select(.name == "release")) | length == 0)) | {title: .title, number: .number, url: .html_url, package: .labels[].name}' | jq -s tostring)
          echo "PRS_IN_MILESTONE=$PRS_IN_MILESTONE" >> $GITHUB_ENV

      - name: Request ChatGPT to write down CHANGELOG
        env:
          OPENAI_KEY: ${{ secrets.OPENAI_KEY }}
        run: |
          PR_LIST=$(echo ${{ env.PRS_IN_MILESTONE }} | jq tostring | sed 's/^"//;s/"$//')
          # CHAT_GPT_PROMPT=$(echo Write down a markdown content based on this data\\n $PR_LIST \\nin the following format:\\n### package\\n\\n- title [#number]\(url\)\\n- title [#number]\(url\)\\n\\n### other package\\n\\n- title [#number]\(url\)\\n- title [#number]\(url\)\\n\\n. Please filter out emojis when writing package name in the markdown.)
          CHAT_GPT_PROMPT=$(echo "Please write me a markdown using this data \`\`\`$PR_LIST\`\`\`in the following format \\n\`\`\`\\n### \$\{package\}\\n- \$\{title\} [#\$\{number\}](\$\{url\})\\n- \$\{title\} [#\$\{number\}](\$\{url\})\\n\\n### \$\{package\}\\n\\n- \$\{title\} [#\$\{number\}](\$\{url\})\\n- \$\{title\} [#\$\{number\}](\$\{url\})\`\`\`\\nPlease filter out emojis when writing package name in the markdown, and if the item has multiple packages write it in multiple package group. ${package} should only be one package, not multiple packages.")
          
          echo 123
          echo $CHAT_GPT_PROMPT
          echo 123

          RESPONSE=$(curl -X POST https://api.openai.com/v1/chat/completions \
           -H "Content-Type: application/json" \
           -H "Authorization: Bearer $OPENAI_KEY" \
           -d '{
              "model": "gpt-3.5-turbo",
              "temperature": 0.2,
              "messages": [
                {
                  "role": "user",
                  "content": "hello"
                }
              ]
            }' 
          )

          echo $RESPONSE | jq
          changelog_content=$(echo $RESPONSE | jq -r '.choices[].message.content')

          printf '\n%s\n\n' "## ${{ env.CURRENT_VERSION }}" >> changelog_tmp.md
          echo -e "$changelog_content" >> changelog_tmp.md

          sed -i '1r changelog_tmp.md' CHANGELOG.md
          rm changelog_tmp.md

      - name: Commit and push updated CHANGELOG
        env:
          GITHUB_TOKEN: ${{ secrets.TRIPLE_BOT_GITHUB_TOKEN }}
        run: |
          git config --local user.email "${{ env.COMMIT_USER_EMAIL }}"
          git config --local user.name "${{ env.COMMIT_USER_NAME }}"
          git add CHANGELOG.md
          git commit -m "Update ${{ env.CURRENT_VERSION }} CHANGELOG"
          git push
