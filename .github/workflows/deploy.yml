name: Update CHANGELOG with PRs in milestone

on:
  pull_request:
    types:
      - labeled

jobs:
  update_changelog:
    runs-on: ubuntu-latest
    if: ${{ github.event.label.name == 'release' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install jq

      - name: Extract milestone title from branch name
        run: |
          milestone_title=$(echo "${{ github.event.pull_request.head.ref }}" | sed -E 's/^release\/(.*)/\1/')
          echo ${{ github.event.pull_request.head.ref }}
          echo "MILESTONE_TITLE=$milestone_title" >> $GITHUB_ENV

      - name: Fetch PRs in milestone
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          response=$(curl -s -H "Accept: application/vnd.github+json" -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/search/issues?q=milestone:v13.1.2+type:pr+repo:$GITHUB_REPOSITORY")
          prs_in_milestone=$(echo "$response" | jq '.items[] | select(.pull_request.merged_at != null and (.labels | map(select(.name == "release")) | length == 0)) | {title: .title, number: .number, url: .html_url, package: .labels[].name}' | jq -s tostring | sed 's/^"//;s/"$//')
          echo "CHAT_GPT_CONTENT=$(echo Please write down a markdown content based on this data\\n $prs_in_milestone \\nin the format like this\\n### package\\n\\n- title [#number]\(url\)\\n- title [#number]\(url\)\\n\\n### other package\\n\\n- title [#number]\(url\)\\n- title [#number]\(url\)\\n\\n)" >> $GITHUB_ENV

      - name: Request ChatGPT to write down CHANGELOG
        env:
          OPENAI_KEY: ${{ secrets.OPENAI_KEY }}
        run: |
          response=$(curl -X POST https://api.openai.com/v1/chat/completions \
           -H "Content-Type: application/json" \
           -H "Authorization: Bearer $OPENAI_KEY" \
           -d '{
              "model": "gpt-3.5-turbo",
              "messages": [
                { 
                  "role": "user",
                  "content": "${{ env.CHAT_GPT_CONTENT }}"
                }
              ]
            }' 
          )

          echo $response | jq
          changelog_content=$(echo $response | jq -r '.choices[].message.content')

          printf '\n%s' "## $MILESTONE_TITLE" >> changelog_tmp.md
          echo -e "$changelog_content" >> changelog_tmp.md

          awk '/^# CHANGELOG/ {print; system("cat changelog_tmp.md"); next}1' CHANGELOG.md > temp
          mv temp CHANGELOG.md
          rm changelog_tmp.md

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add CHANGELOG.md
          git commit -m "Update CHANGELOG.md with PRs in milestone $MILESTONE_TITLE"
          git push
