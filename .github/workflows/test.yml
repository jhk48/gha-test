name: Test-workflow

on:
  pull_request:
    branches: [main]
    types: [closed]

jobs:
  deploy_webapp:
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'frontend')
    runs-on: ubuntu-latest
    env:
      wd: ./packages/webapp

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Install lerna
        run: yarn global add lerna

      - name: Cache node modules
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install All Dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: lerna bootstrap

      - name: Create env file
        run: |
          touch .env
          echo API_SERVER_URL=${{ secrets.API_SERVER_URL }} >> .env
          echo SOCKET_SERVER_URL=${{ secrets.SOCKET_SERVER_URL }} >> .env
          echo AVATAR_IMAGE_BASE_URL=${{ secrets.AVATAR_IMAGE_BASE_URL }} >> .env
          echo OAUTH_REDIRECT_BASE_URL=${{ secrets.OAUTH_REDIRECT_BASE_URL }} >> .env
          echo GOOGLE_OAUTH_BASE_URL=${{ secrets.GOOGLE_OAUTH_BASE_URL }} >> .env
          echo GOOGLE_OAUTH_SCOPE=${{ secrets.GOOGLE_OAUTH_SCOPE }} >> .env
          echo GOOGLE_OAUTH_CLIENT_ID=${{ secrets.GOOGLE_OAUTH_CLIENT_ID }} >> .env
          echo GOOGLE_OAUTH_CLIENT_SECRET=${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }} >> .env
        working-directory: ${{ env.wd }}

      - name: Build webapp
        run: yarn build
        working-directory: ${{ env.wd }}

      - name: finalize deploying webapp
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_SECRET }}
        run: |
          aws s3 cp s3://${{ secrets.WEBAPP_BUCKET_NAME }}/index.html s3://${{ secrets.WEBAPP_BUCKET_NAME }}/index.html --cache-control "no-store"
        working-directory: ${{ env.wd }}
